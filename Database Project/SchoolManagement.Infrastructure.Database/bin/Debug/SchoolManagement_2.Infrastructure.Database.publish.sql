/*
Deployment script for dbSchool

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "dbSchool"
:setvar DefaultFilePrefix "dbSchool"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[auditlog]...';


GO
CREATE TABLE [dbo].[auditlog] (
    [auditlog_id]                BIGINT           IDENTITY (1, 1) NOT NULL,
    [auditlog_request_token]     VARCHAR (500)    NULL,
    [auditlog_request_url]       VARCHAR (500)    NULL,
    [auditlog_request_method]    VARCHAR (100)    NULL,
    [auditlog_request_query]     TEXT             NULL,
    [auditlog_request_payload]   TEXT             NULL,
    [auditlog_response_payload]  TEXT             NULL,
    [auditlog_ip_address]        VARCHAR (45)     NULL,
    [auditlog_browser_useragent] TEXT             NULL,
    [auditlog_event_datetime]    DATETIME         NULL,
    [auditlog_event_actor]       INT              NULL,
    [auditlog_event_actor_id]    UNIQUEIDENTIFIER NULL,
    [auditlog_authorized]        TINYINT          NULL,
    [auditlog_response_code]     INT              NULL,
    [auditlog_created]           DATETIME         NULL,
    [created_at]                 DATETIME         NULL,
    [updated_at]                 DATETIME         NULL
);


GO
PRINT N'Creating Table [dbo].[Jwt_Tokens]...';


GO
CREATE TABLE [dbo].[Jwt_Tokens] (
    [Id]           BIGINT           IDENTITY (1, 1) NOT NULL,
    [Token]        NVARCHAR (MAX)   NULL,
    [Status]       NVARCHAR (100)   NULL,
    [CreatedBy]    UNIQUEIDENTIFIER NULL,
    [ModifiedBy]   UNIQUEIDENTIFIER NULL,
    [CreatedDate]  DATETIME2 (7)    NULL,
    [ModifiedDate] DATETIME2 (7)    NULL,
    [DeletedDate]  DATETIME2 (7)    NULL
);


GO
PRINT N'Creating Table [dbo].[Roles]...';


GO
CREATE TABLE [dbo].[Roles] (
    [Id]           INT              NOT NULL,
    [Role]         NCHAR (100)      NOT NULL,
    [CreatedBy]    UNIQUEIDENTIFIER NULL,
    [CreatedDate]  DATETIME2 (7)    NOT NULL,
    [ModifiedBy]   UNIQUEIDENTIFIER NULL,
    [ModifiedDate] DATETIME2 (7)    NULL,
    [DeletedBy]    UNIQUEIDENTIFIER NULL,
    [DeletedDate]  DATETIME2 (7)    NULL,
    [Status]       BIT              NULL
);


GO
PRINT N'Creating Table [dbo].[Schools]...';


GO
CREATE TABLE [dbo].[Schools] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [SchoolName]    NCHAR (100)      NULL,
    [SchoolAddress] NCHAR (500)      NULL,
    [CreatedBy]     UNIQUEIDENTIFIER NULL,
    [CreatedDate]   DATETIME2 (7)    NOT NULL,
    [ModifeiedBy]   UNIQUEIDENTIFIER NULL,
    [ModifiedDate]  DATETIME2 (7)    NULL,
    [DeletedBy]     UNIQUEIDENTIFIER NULL,
    [DeletedDate]   DATETIME2 (7)    NULL,
    [Status]        BIT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Students]...';


GO
CREATE TABLE [dbo].[Students] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [FirstName]    VARCHAR (255)    NOT NULL,
    [MiddletName]  VARCHAR (255)    NULL,
    [LastName]     VARCHAR (255)    NULL,
    [DateOfBirth]  DATE             NULL,
    [FatherName]   VARCHAR (255)    NULL,
    [MotherName]   VARCHAR (255)    NULL,
    [Class]        INT              NOT NULL,
    [AadharNumber] BIGINT           NOT NULL,
    [Address]      VARCHAR (MAX)    NOT NULL,
    [PinCode]      INT              NOT NULL,
    [SchoolId]     UNIQUEIDENTIFIER NULL,
    [CreatedBy]    UNIQUEIDENTIFIER NULL,
    [CreatedDate]  DATETIME2 (7)    NOT NULL,
    [ModifiedBy]   UNIQUEIDENTIFIER NULL,
    [ModifiedDate] DATETIME2 (7)    NULL,
    [DeletedBy]    UNIQUEIDENTIFIER NULL,
    [DeletedDate]  DATETIME2 (7)    NULL,
    [Status]       BIT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Teachers]...';


GO
CREATE TABLE [dbo].[Teachers] (
    [Id]                   UNIQUEIDENTIFIER NOT NULL,
    [FirstName]            VARCHAR (255)    NOT NULL,
    [MiddletName]          VARCHAR (255)    NULL,
    [LastName]             VARCHAR (255)    NULL,
    [Address]              VARCHAR (MAX)    NOT NULL,
    [PinCode]              INT              NOT NULL,
    [HighestQualification] VARCHAR (255)    NOT NULL,
    [SchoolId]             UNIQUEIDENTIFIER NULL,
    [CreatedBy]            UNIQUEIDENTIFIER NULL,
    [CreatedDate]          DATETIME2 (7)    NOT NULL,
    [ModifiedBy]           UNIQUEIDENTIFIER NULL,
    [ModifiedDate]         DATETIME2 (7)    NULL,
    [DeletedBy]            UNIQUEIDENTIFIER NULL,
    [DeletedDate]          DATETIME2 (7)    NULL,
    [Status]               BIT              NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [UserId]       UNIQUEIDENTIFIER NOT NULL,
    [UserName]     NCHAR (100)      NOT NULL,
    [Password]     NCHAR (100)      NOT NULL,
    [RoleId]       INT              NOT NULL,
    [Email]        NCHAR (100)      NOT NULL,
    [Phone]        NCHAR (10)       NOT NULL,
    [SchoolId]     UNIQUEIDENTIFIER NULL,
    [TokenId]      BIGINT           NULL,
    [CreatedBy]    UNIQUEIDENTIFIER NOT NULL,
    [CreatedDate]  DATETIME2 (7)    NULL,
    [ModifiedBy]   UNIQUEIDENTIFIER NULL,
    [ModifiedDate] DATETIME2 (7)    NULL,
    [DeletedBy]    UNIQUEIDENTIFIER NULL,
    [DeletedDate]  DATETIME2 (7)    NULL,
    [Status]       BIT              NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Roles]...';


GO
ALTER TABLE [dbo].[Roles]
    ADD DEFAULT GETDATE() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Schools]...';


GO
ALTER TABLE [dbo].[Schools]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Schools]...';


GO
ALTER TABLE [dbo].[Schools]
    ADD DEFAULT GETDATE() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Students]...';


GO
ALTER TABLE [dbo].[Students]
    ADD DEFAULT NEWId() FOR [Id];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Students]...';


GO
ALTER TABLE [dbo].[Students]
    ADD DEFAULT getdate() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Teachers]...';


GO
ALTER TABLE [dbo].[Teachers]
    ADD DEFAULT NEWId() FOR [Id];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Teachers]...';


GO
ALTER TABLE [dbo].[Teachers]
    ADD DEFAULT getdate() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT NEWID() FOR [UserId];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT GETDATE() FOR [CreatedBy];


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Students]...';


GO
ALTER TABLE [dbo].[Students] WITH NOCHECK
    ADD FOREIGN KEY ([SchoolId]) REFERENCES [dbo].[Schools] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Teachers]...';


GO
ALTER TABLE [dbo].[Teachers] WITH NOCHECK
    ADD FOREIGN KEY ([SchoolId]) REFERENCES [dbo].[Schools] ([Id]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users] WITH NOCHECK
    ADD FOREIGN KEY ([SchoolId]) REFERENCES [dbo].[Schools] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Students'), OBJECT_ID(N'dbo.Teachers'), OBJECT_ID(N'dbo.Users'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
